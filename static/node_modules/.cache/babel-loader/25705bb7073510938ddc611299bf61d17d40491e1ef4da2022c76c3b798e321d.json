{"ast":null,"code":"var _jsxFileName = \"/Users/mugunthansaravanan/Desktop/count/react/count/src/VideoStream.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VideoStream = () => {\n  _s();\n  const [detections, setDetections] = useState([]);\n  const [animalCounts, setAnimalCounts] = useState({});\n  const videoRef = useRef(null);\n  useEffect(() => {\n    const startVideo = async () => {\n      try {\n        const stream = await navigator.mediaDevices.getUserMedia({\n          video: true\n        });\n        videoRef.current.srcObject = stream;\n        videoRef.current.play();\n      } catch (error) {\n        console.error('Error accessing webcam:', error);\n      }\n    };\n    startVideo();\n    const captureFrame = async () => {\n      if (videoRef.current) {\n        const canvas = document.createElement('canvas');\n        canvas.width = videoRef.current.videoWidth;\n        canvas.height = videoRef.current.videoHeight;\n        const ctx = canvas.getContext('2d');\n        ctx.drawImage(videoRef.current, 0, 0);\n        canvas.toBlob(async blob => {\n          if (!blob) {\n            console.error('Error creating blob from canvas');\n            return;\n          }\n          const formData = new FormData();\n          formData.append('file', blob, 'frame.jpg');\n          try {\n            const response = await axios.post('http://localhost:5000/detect', formData, {\n              headers: {\n                'Content-Type': 'multipart/form-data'\n              }\n            });\n            const detected = response.data.detections || [];\n            setDetections(detected);\n\n            // Count the number of each animal detected\n            const counts = detected.reduce((acc, obj) => {\n              acc[obj.name] = (acc[obj.name] || 0) + 1;\n              return acc;\n            }, {});\n            setAnimalCounts(counts);\n          } catch (error) {\n            console.error('Error sending frame:', error);\n          }\n        }, 'image/jpeg');\n\n        // Call captureFrame again to capture the next frame\n        requestAnimationFrame(captureFrame);\n      }\n    };\n    captureFrame();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Real-time Object Detection\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n      ref: videoRef,\n      style: {\n        width: '100%'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Detected Animals\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: detections.map((det, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [det.name, \" (\", det.confidence.toFixed(2), \")\"]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Animal Counts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Animal\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Count\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: Object.entries(animalCounts).map(([animal, count], index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: animal\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: count\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 17\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n_s(VideoStream, \"zCIC6Y5QLjX+lIK7NaQSFPR+lKo=\");\n_c = VideoStream;\nexport default VideoStream;\nvar _c;\n$RefreshReg$(_c, \"VideoStream\");","map":{"version":3,"names":["React","useRef","useEffect","useState","axios","jsxDEV","_jsxDEV","VideoStream","_s","detections","setDetections","animalCounts","setAnimalCounts","videoRef","startVideo","stream","navigator","mediaDevices","getUserMedia","video","current","srcObject","play","error","console","captureFrame","canvas","document","createElement","width","videoWidth","height","videoHeight","ctx","getContext","drawImage","toBlob","blob","formData","FormData","append","response","post","headers","detected","data","counts","reduce","acc","obj","name","requestAnimationFrame","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","style","map","det","index","confidence","toFixed","Object","entries","animal","count","_c","$RefreshReg$"],"sources":["/Users/mugunthansaravanan/Desktop/count/react/count/src/VideoStream.js"],"sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\nimport axios from 'axios';\n\nconst VideoStream = () => {\n  const [detections, setDetections] = useState([]);\n  const [animalCounts, setAnimalCounts] = useState({});\n  const videoRef = useRef(null);\n\n  useEffect(() => {\n    const startVideo = async () => {\n      try {\n        const stream = await navigator.mediaDevices.getUserMedia({ video: true });\n        videoRef.current.srcObject = stream;\n        videoRef.current.play();\n      } catch (error) {\n        console.error('Error accessing webcam:', error);\n      }\n    };\n\n    startVideo();\n\n    const captureFrame = async () => {\n      if (videoRef.current) {\n        const canvas = document.createElement('canvas');\n        canvas.width = videoRef.current.videoWidth;\n        canvas.height = videoRef.current.videoHeight;\n        const ctx = canvas.getContext('2d');\n        ctx.drawImage(videoRef.current, 0, 0);\n\n        canvas.toBlob(async (blob) => {\n          if (!blob) {\n            console.error('Error creating blob from canvas');\n            return;\n          }\n\n          const formData = new FormData();\n          formData.append('file', blob, 'frame.jpg');\n\n          try {\n            const response = await axios.post('http://localhost:5000/detect', formData, {\n              headers: {\n                'Content-Type': 'multipart/form-data'\n              }\n            });\n            const detected = response.data.detections || [];\n            setDetections(detected);\n\n            // Count the number of each animal detected\n            const counts = detected.reduce((acc, obj) => {\n              acc[obj.name] = (acc[obj.name] || 0) + 1;\n              return acc;\n            }, {});\n            setAnimalCounts(counts);\n          } catch (error) {\n            console.error('Error sending frame:', error);\n          }\n        }, 'image/jpeg');\n\n        // Call captureFrame again to capture the next frame\n        requestAnimationFrame(captureFrame);\n      }\n    };\n\n    captureFrame();\n  }, []);\n\n  return (\n    <div>\n      <h1>Real-time Object Detection</h1>\n      <video ref={videoRef} style={{ width: '100%' }}></video>\n      <div>\n        <h2>Detected Animals</h2>\n        <ul>\n          {detections.map((det, index) => (\n            <li key={index}>{det.name} ({det.confidence.toFixed(2)})</li>\n          ))}\n        </ul>\n      </div>\n      <div>\n        <h2>Animal Counts</h2>\n        <table>\n          <thead>\n            <tr>\n              <th>Animal</th>\n              <th>Count</th>\n            </tr>\n          </thead>\n          <tbody>\n            {Object.entries(animalCounts).map(([animal, count], index) => (\n              <tr key={index}>\n                <td>{animal}</td>\n                <td>{count}</td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n};\n\nexport default VideoStream;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}