{"ast":null,"code":"var _jsxFileName = \"/Users/mugunthansaravanan/Desktop/count/react/count/src/CameraAndTable.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from 'react';\nimport axios from 'axios';\nimport './CameraAndTable.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CameraAndTable() {\n  _s();\n  const [animalCounts, setAnimalCounts] = useState({});\n  const videoRef = useRef(null);\n  useEffect(() => {\n    const startCamera = async () => {\n      try {\n        const stream = await navigator.mediaDevices.getUserMedia({\n          video: true\n        });\n        if (videoRef.current) {\n          videoRef.current.srcObject = stream;\n        }\n      } catch (error) {\n        console.error('Error accessing the camera:', error);\n      }\n    };\n    startCamera();\n    const fetchCounts = async () => {\n      try {\n        const response = await axios.get('http://localhost:5000/animal_counts');\n        console.log('Fetched data:', response.data); // Debugging line\n        setAnimalCounts(response.data);\n      } catch (error) {\n        console.error('Error fetching animal counts:', error);\n      }\n    };\n    fetchCounts(); // Initial fetch\n    const interval = setInterval(fetchCounts, 5000); // Update every 5 seconds\n\n    return () => clearInterval(interval); // Cleanup on component unmount\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"camera-preview\",\n      children: /*#__PURE__*/_jsxDEV(\"video\", {\n        ref: videoRef,\n        autoPlay: true,\n        style: {\n          width: '100%',\n          height: 'auto'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"animal-counts\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Animal Counts:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Animal\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Count\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: Object.entries(animalCounts).length === 0 ? /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: /*#__PURE__*/_jsxDEV(\"td\", {\n              colSpan: \"2\",\n              children: \"No data available\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 15\n          }, this) : Object.entries(animalCounts).map(([animal, count]) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: animal\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: count\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 19\n            }, this)]\n          }, animal, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n_s(CameraAndTable, \"R+wT44UbMkHTdhaLb4E7hFzjF9A=\");\n_c = CameraAndTable;\nexport default CameraAndTable;\nvar _c;\n$RefreshReg$(_c, \"CameraAndTable\");","map":{"version":3,"names":["React","useEffect","useState","useRef","axios","jsxDEV","_jsxDEV","CameraAndTable","_s","animalCounts","setAnimalCounts","videoRef","startCamera","stream","navigator","mediaDevices","getUserMedia","video","current","srcObject","error","console","fetchCounts","response","get","log","data","interval","setInterval","clearInterval","className","children","ref","autoPlay","style","width","height","fileName","_jsxFileName","lineNumber","columnNumber","Object","entries","length","colSpan","map","animal","count","_c","$RefreshReg$"],"sources":["/Users/mugunthansaravanan/Desktop/count/react/count/src/CameraAndTable.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\nimport axios from 'axios';\nimport './CameraAndTable.css';\n\nfunction CameraAndTable() {\n  const [animalCounts, setAnimalCounts] = useState({});\n  const videoRef = useRef(null);\n\n  useEffect(() => {\n    const startCamera = async () => {\n      try {\n        const stream = await navigator.mediaDevices.getUserMedia({ video: true });\n        if (videoRef.current) {\n          videoRef.current.srcObject = stream;\n        }\n      } catch (error) {\n        console.error('Error accessing the camera:', error);\n      }\n    };\n\n    startCamera();\n\n    const fetchCounts = async () => {\n      try {\n        const response = await axios.get('http://localhost:5000/animal_counts');\n        console.log('Fetched data:', response.data); // Debugging line\n        setAnimalCounts(response.data);\n      } catch (error) {\n        console.error('Error fetching animal counts:', error);\n      }\n    };\n\n    fetchCounts(); // Initial fetch\n    const interval = setInterval(fetchCounts, 5000); // Update every 5 seconds\n\n    return () => clearInterval(interval); // Cleanup on component unmount\n  }, []);\n\n  return (\n    <div className=\"container\">\n      <div className=\"camera-preview\">\n        <video\n          ref={videoRef}\n          autoPlay\n          style={{ width: '100%', height: 'auto' }}\n        />\n      </div>\n      <div className=\"animal-counts\">\n        <h2>Animal Counts:</h2>\n        <table>\n          <thead>\n            <tr>\n              <th>Animal</th>\n              <th>Count</th>\n            </tr>\n          </thead>\n          <tbody>\n            {Object.entries(animalCounts).length === 0 ? (\n              <tr>\n                <td colSpan=\"2\">No data available</td>\n              </tr>\n            ) : (\n              Object.entries(animalCounts).map(([animal, count]) => (\n                <tr key={animal}>\n                  <td>{animal}</td>\n                  <td>{count}</td>\n                </tr>\n              ))\n            )}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n}\n\nexport default CameraAndTable;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}